from flask_oauthlib.provider import OAuth2Provider
from .db import db
from .models import Client, Grant, User, Token
from datetime import datetime, timedelta

oauth = OAuth2Provider()

@oauth.clientgetter
def load_client(client_id):
    return Client.query.filter_by(client_id=client_id).first()

@oauth.grantgetter
def load_grant(client_id, code):
    return Grant.query.filter_by(client_id=client_id, code=code).first()

@oauth.grantsetter
def save_grant(client_id, code, request, *args, **kwargs):
    expires = datetime.utcnow() + timedelta(minutes=10)
    grant = Grant(
        client_id=client_id,
        code=code['code'],
        redirect_uri=request.redirect_uri,
        _scopes=' '.join(request.scopes),
        user=request.user,
        expires=expires
    )
    db.session.add(grant)
    db.session.commit()
    return grant

@oauth.tokengetter
def load_token(access_token=None, refresh_token=None):
    # implement token storage retrieval
    return None

@oauth.tokensetter
def save_token(token, request, *args, **kwargs):
    # implement token storage logic
    return None